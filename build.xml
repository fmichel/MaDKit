<?xml version="1.0"?>
<!-- 
 This is ant build.xml file for building the MaDKit kernel jar file MaDKit V.5
 Author: Fabien Michel
 Version: 5.1
-->

<project name="MaDKit" default="jar" basedir=".">

	<!-- defining project general properties -->
	<tstamp prefix="time" />
	<property name="build.id" value="${time.DSTAMP}-${time.TSTAMP}" />
	<property name="src.dir" value="src" />
	<property name="madkit.properties" value="madkit/kernel/madkit.properties" />

	<property file="${src.dir}/${madkit.properties}" />

	<property name="project.website" value="${madkit.web}" />
	<property name="resource.dir" value="resource" />
	<property name="MDK.build.properties" value="madkitKernelBuild.properties" />
	<property file="${resource.dir}/${MDK.build.properties}" />

	<!-- user's specific local properties -->
	<property name="server.info.dir" value="${user.home}/.mdk_keystore" />
	<property name="MaDKit-demos.dir" value="../MaDKit-demos" />

	<import file="${madkit.ant.targets.file}" />

	<echo>using ${ant.version}</echo>
	<echo>using Java ${java.runtime.version} from ${java.home}</echo>


	<!-- ================================= 
          target: buildResources         
         ================================= -->
	<target name="buildResources">
		<mkdir dir="${build.dir}" />
		<mkdir dir="${release.dir}" />
		<native2ascii src="${i18n.src.dir}" dest="${i18n.build.dir}" encoding="iso-8859-1" includes="*FR*" />
		<copy todir="${build.dir}" overwrite="false">
			<fileset dir="${src.dir}" excludes="**/*.java" />
		</copy>
	</target>

	<!-- ================================= 
          target: src-zip              
         ================================= -->
	<target name="src-zip" description="the src zip">
		<zip destfile="${src.zip.location}" level="9">
			<zipfileset dir="${src.dir}" includes="**/*.java" excludes="**/package-info.java" />
			<zipfileset dir="${demo.dir}" includes="**/*.java" excludes="**/package-info.java" />
		</zip>
	</target>

	<!-- ================================= 
          target: junit-src-zip              
         ================================= -->
	<target name="junit-src-zip" depends="src-zip" description="the junit src zip">
		<zip destfile="${src.zip.location}" update="true" level="9">
			<zipfileset dir="test" includes="**/*.java" excludes="**/package-info.java" />
		</zip>
	</target>

	<path id="compile.classpath">
		<fileset dir="${java.home}/lib">
			<include name="deploy.jar" />
			<include name="javaws.jar" />
		</fileset>
	</path>


	<!-- ================================= 
          target: compile           TODO check javac task   
		<tstamp prefix="time"/>
		<property name="build.id" value="${time.DSTAMP}-${time.TSTAMP}"/>
			debuglevel="source"
			debuglevel="lines"
         ================================= -->
	<target name="compile" depends="buildResources">
		<javac debug="true" debuglevel="vars" includeAntRuntime="false" classpathref="compile.classpath" srcdir="${src.dir}" destdir="${build.dir}" deprecation="on" />
	</target>

	<!-- ================================= 
          target: jar
         ================================= -->
	<target name="jar" depends="clean,compile,build-properties" description="Jar ${build.dir} directory into ${madkit.jar.name}">
		<jar destfile="${jar.file}" level="1">
			<fileset dir="${build.dir}">
				<exclude name="**/package-info.class" />
				<exclude name="**/doc-files/**" />
			</fileset>

			<manifest>
				<attribute name="Description" value="${description}" />
				<attribute name="Version" value="${madkit.version}" />
				<attribute name="Application-Name" value="${project.label}" />
				<attribute name="Codebase" value="${web.codebase}" />
				<attribute name="Author" value="${author}" />
				<attribute name="Build-Id" value="${build.id}" />
				<attribute name="Built-On" value="${timestamp.isoformat}" />
				<attribute name="Built-By" value="${user.name}" />
				<attribute name="Main-Class" value="${madkit.main.class}" />
				<attribute name="Permissions" value="all-permissions" />
				<attribute name="Trusted-Library" value="true" />
				<section name="MaDKit-Project-Info">
					<attribute name="Project-Name" value="${project.label}" />
					<attribute name="Project-Code-Name" value="${ant.project.name}" />
					<attribute name="Project-Version" value="${version}" />
					<attribute name="Author" value="${author}" />
					<attribute name="Built-By" value="${user.name}" />
					<attribute name="MaDKit-Args" value="" />
					<attribute name="Agent-Classes" value="madkit.gui.ConsoleAgent,madkit.kernel.AbstractAgent,madkit.kernel.Agent,madkit.kernel.Scheduler,madkit.kernel.Watcher" />
				</section>
			</manifest>
		</jar>

		<chmod file="${jar.file}" perm="ugo+x" />
		<echo>${jar.file} created !${line.separator}</echo>
	</target>

	<!-- - - - - - - - - - - - - - - - - - 
          target: build-properties                      
         - - - - - - - - - - - - - - - - - -->
	<target name="build-properties">
		<tstamp>
			<format property="timestamp.isoformat" pattern="yyyy-mm-dd HH:mm:ss" locale="en" />
		</tstamp>
		<filterset begintoken="[[" endtoken="]]">
			<filter token="TIMESTAMP" value="${timestamp.isoformat}" />
		</filterset>
		<copy tofile="${build.dir}/${madkit.properties}" file="${src.dir}/${madkit.properties}" overwrite="true">
			<filterchain>
				<expandproperties />
			</filterchain>
		</copy>
	</target>

	<property name="test.dir" location="${build.dir}/test" />
	<property name="test.classes.dir" location="${test.dir}/classes" />
	<property name="test.data.dir" location="${test.dir}/data" />
	<property name="test.reports.dir" location="${test.dir}/test-reports" />

	<path id="test.compile.classpath">
		<fileset dir="lib">
			<include name="junit*.jar" />
			<include name="hamcrest-core-1.3.jar" />
		</fileset>
		<path refid="compile.classpath" />
		<pathelement location="${build.dir}" />
	</path>

	<path id="test.classpath">
		<path refid="test.compile.classpath" />
		<pathelement location="${test.classes.dir}" />
		<pathelement location="${basedir}" />
		<!--for images -->
	</path>
	
	<!-- ================================= 
          target: mdk-junit-jar              
         ================================= -->
    <target name="junit-mdk-jar" depends="clean,compile" description="build the jar for using the MDK junit classes">
		<javac destdir="${build.dir}" includeAntRuntime="false" debug="on" srcdir="test">
			<classpath refid="test.compile.classpath" />
		</javac>
		<jar destfile="${jar.file}" update="true" level="1">
			<fileset dir="${build.dir}">
				<exclude name="**/package-info.class" />
				<exclude name="**/doc-files/**" />
			</fileset>
		</jar>

		<chmod file="${jar.file}" perm="ugo+x" />
		<echo>${jar.file} created !${line.separator}</echo>
    	
    </target>


	<target name="test-init" depends="buildResources">
		<javac debug="true" includeAntRuntime="false" classpathref="compile.classpath" srcdir="${src.dir}" destdir="${build.dir}" excludes="**/networking/**" />
		<mkdir dir="${test.classes.dir}" />
		<delete dir="${test.data.dir}" />
		<delete dir="${test.reports.dir}" />
		<mkdir dir="${test.data.dir}" />
		<mkdir dir="${test.reports.dir}" />
	</target>

	<target name="test-compile" depends="test-init">
		<javac destdir="${test.classes.dir}" includeAntRuntime="false" debug="on" srcdir="test">
			<classpath refid="test.compile.classpath" />
		</javac>
	</target>


	<!-- ================================= 
          target: junit              
         ================================= -->
	<target name="test" depends="clean,test-compile" description="junit testing">
		<!-- copy resources -->
		<copy todir="${test.classes.dir}" overwrite="false">
			<fileset dir="test" excludes="**/*.java" />
		</copy>
		<junit printsummary="withOutAndErr" haltonfailure="true" maxmemory="2048m">
			<classpath refid="test.classpath" />
			<formatter type="brief" usefile="false" />
			<formatter type="xml" />
			<batchtest todir="${test.data.dir}" fork="true">
				<fileset dir="${test.classes.dir}" includes="**/*Test.class" />
			</batchtest>
		</junit>
		<junitreport todir="${test.data.dir}">
			<fileset dir="${test.data.dir}">
				<include name="TEST-*.xml" />
			</fileset>
			<report format="frames" todir="${test.reports.dir}" />
		</junitreport>
		<replace dir="${test.reports.dir}" token="Unit Test Result" value="MaDKit ${madkit.version} Unit Test Result" />
	</target>

	<target name="oneshot-test-compile" depends="test-init">
		<javac destdir="${test.classes.dir}" includeAntRuntime="false" debug="on" srcdir="test" includes="**/DuplicateNamesTest*">
			<classpath refid="test.compile.classpath" />
		</javac>
	</target>

	<target name="oneshot-test" depends="clean,oneshot-test-compile" description="junit">
		<!-- 
		<delete>
			<fileset dir="${test.classes.dir}">
			</fileset>
		</delete>
		
		-->

		<!-- copy resources -->
		<copy todir="${test.classes.dir}" overwrite="false">
			<fileset dir="test" excludes="**/*.java" />
		</copy>
		<junit printsummary="false" haltonfailure="true" maxmemory="2048m">
			<classpath refid="test.classpath" />
			<formatter type="brief" usefile="false" />
			<formatter type="xml" />
			<batchtest todir="${test.data.dir}" fork="true">
				<fileset dir="${test.classes.dir}" includes="**/*Test.class" />
			</batchtest>
		</junit>
		<junitreport todir="${test.data.dir}">
			<fileset dir="${test.data.dir}">
				<include name="TEST-*.xml" />
			</fileset>
			<report format="frames" todir="${test.reports.dir}" />
		</junitreport>
		<replace dir="${test.reports.dir}" token="Unit Test Result" value="MaDKit ${madkit.version} Unit Test Result" />
	</target>



	<!-- ================================= 
      TODO fix xdoclint validation
     ================================= -->
	<target name="javadoc" description="build the javadoc">
		<tstamp />
		<javadoc sourcepath="${src.dir}" destdir="${docs.api.dir}" classpathref="compile.classpath" failonwarning="true" access="protected" docfilessubdirs="true" author="true" version="true" use="true" linksource="no" windowtitle="${project.label}" additionalparam="-Xdoclint:none">
			<doctitle>
				<![CDATA[<h1>${project.label}</h1>
			<h2>${description}</h2>]]>
		</doctitle>
		<header>
			<![CDATA[
			<a target="blank" href="${madkit.web}">
			<img alt="MaDKit" width="20" src="{@docRoot}/doc-files/MaDKit.png">
			</a>&nbsp;&nbsp;&nbsp;
			<a target="blank" href="${github.url}">
				<img alt="GitHub" width="20" src="https://github.com/fluidicon.png">
				</a>
			]]>
		</header>
			<bottom>
				<![CDATA[
			<br/>
				<p style=" text-indent: 3em;">
					<a target="blank" href="${madkit.web}">
						<img alt="MaDKit" width="50" src="{@docRoot}/doc-files/MaDKit.png">
						</a>&nbsp;&nbsp;&nbsp;
			<a target="blank" href="${github.url}">
							<img alt="GitHub" width="50" src="https://github.com/fluidicon.png">
							</a>
							<i>
								<br/>&nbsp;&nbsp;&nbsp;${author} - ${TODAY}</i>
						</p>
			]]>
		</bottom>
					<link href="${sun.api.url}" />
				</javadoc>
			</target>

			<!-- ================================= 
          target: clean              
         ================================= -->
			<target name="clean" description="cleanup build directories">
				<delete dir="${build.dir}" />
				<delete dir="${logDirectory}" />
				<delete dir="${release.dir}" />
				<delete file="${jar.file}" failonerror="false" />
				<delete file="${src.zip.location}" failonerror="false" />
				<delete dir="${docs.dir}" />
				<delete dir="${tuto.dir}" />
				<delete file="${docs.dir}/French_Tutorial/MaDKit_Tutorial/${lib.dir}/${madkit.jar.name}" />
				<delete>
					<fileset dir="${demo.dir}">
						<include name="**/*MaDKit-bees*" />
						<include name="**/*MaDKit-market-organization*" />
						<include name="**/*MaDKit-ping*" />
					</fileset>
				</delete>
			</target>

			<!-- - - - - - - - - - - - - - - - - - 
          target: clean-demos           
         - - - - - - - - - - - - - - - - - -->
			<target name="clean-demos">
				<echo>Cleaning MaDKit-demos</echo>
				<exec executable="ant" spawn="false" dir="${MaDKit-demos.dir}">
					<arg value="clean" />
				</exec>
			</target>
	
	<!-- ================================= 
          target: junit-release              
         ================================= -->
    <target name="junit-release" depends="release,junit-mdk-jar,junit-src-zip" description="junit featured release">
		<zip destfile="${release.dir}/${distribution.zip.name}" update="true" level="9">
			<zipfileset file="${jar.file}" filemode="755" />
			<zipfileset file="${docs.dir}/${src.zip.name}" prefix="${docs.dir}" filemode="755" />
		</zip>
    </target>

	
	


			<!-- ================================= 
          target: release              
	<chmod dir="${demo.dir}" perm="u+x" includes="**/*.jar"/>
	<chmod dir="${tuto.dir}" perm="u+x" includes="**/*.jar"/>
			<zipfileset dir="${release.dir}" includes="MaDKit-5-Desktop.jnlp"/>
         ================================= -->
			<target name="release" depends="clean-demos,jar,javadoc,src-zip" description="build MaDKit release">
				<echo> --- Build Release : MaDKit ${madkit.version}${line.separator}</echo>
				<mkdir dir="${release.dir}" />

				<copy todir="${build.dir}">
					<fileset dir="${resource.dir}" excludes="${MDK.build.properties}" />
					<filterchain>
						<expandproperties />
					</filterchain>
				</copy>

				<echo>Building MaDKit Demos</echo>
				<exec executable="ant" spawn="false" dir="${MaDKit-demos.dir}">
					<arg value="update-to-last-kernel" />
				</exec>
				<exec executable="ant" spawn="false" dir="${MaDKit-demos.dir}" />

				<echo>Zipping MaDKit release</echo>
				<zip destfile="${release.dir}/${distribution.zip.name}" level="9">
					<zipfileset dir="${docs.dir}" prefix="${docs.dir}" />
					<zipfileset dir="${build.dir}" includes="README.html" />
					<zipfileset dir="${build.dir}" includes="VERSION,${doc.html},build.xml,XML_config_example.xml" prefix="${docs.dir}" />
					<zipfileset file="${jar.file}" filemode="755" />
					<zipfileset file="LICENSE" />
					<zipfileset dir="${demo.dir}" prefix="${demo.dir}" filemode="755" />
				</zip>

				<echo>Building the desktop webstart archive</echo>
				<delete>
					<fileset dir="${build.dir}" includes="VERSION,*.xml,README*,*.php" />
				</delete>

				<unzip dest="${build.dir}">
					<patternset>
						<exclude name="META-INF/*" />
					</patternset>
					<fileset dir="${MaDKit-demos.dir}/release">
						<include name="**/*.agents.jar" />
					</fileset>
				</unzip>
				<jar destfile="${jar.file}" level="1" update="true">
					<fileset dir="${build.dir}">
						<exclude name="**/package-info.class" />
						<exclude name="**/doc-files/**" />
					</fileset>
					<manifest>
						<section name="MaDKit-Project-Info">
							<attribute name="Agent-Classes" value="madkit.pingpong.PingPong,madkit.pingpong.PingPongDemoLauncherAgent,madkit.marketorg.Broker,madkit.marketorg.Client,madkit.marketorg.Provider,madkit.bees.Bee,madkit.bees.BeeLauncher,madkit.bees.QueenBee,madkit.gui.ConsoleAgent,madkit.kernel.AbstractAgent,madkit.kernel.Agent,madkit.kernel.Scheduler,madkit.kernel.Watcher" />
							<attribute name="Main-Classes" value="madkit.bees.BeeLauncher,madkit.marketorg.Client,madkit.pingpong.PingPong,madkit.pingpong.PingPongDemoLauncherAgent" />
							<attribute name="XML-Files" value="marketorg.xml" />
						</section>
					</manifest>
				</jar>
				<antcall target="sign-jar" />
			</target>

			<!-- - - - - - - - - - - - - - - - - - 
          target: ftp-release                      
         - - - - - - - - - - - - - - - - - -->
			<target name="ftp-release" depends="release">
				<loadproperties srcFile="${server.info.dir}/MDK.net" />
				<property name="ftp.dir.target" value="${madkit.ftp.dir}/repository/MaDKit-${madkit.version}" />

				<unzip src="${release.dir}/${distribution.zip.name}" dest="${release.dir}/web" />

				<echo>FTP uploading new release files in ${ftp.dir.target}</echo>
				<ftp server="${ftp.server}" userid="${ftp.user}" password="${ftp.password}" action="mkdir" remotedir="${ftp.dir.target}" verbose="yes" />
				<ftp server="${ftp.server}" userid="${ftp.user}" password="${ftp.password}" action="put" remotedir="${ftp.dir.target}">
					<fileset dir="${release.dir}/web" excludes="LICENSE" />
					<fileset dir="${resource.dir}" includes="index.php" />
					<fileset file="${release.dir}/${distribution.zip.name}" />
				</ftp>

				<echo>FTP upload of MDK desktop web start files in ${madkit.ftp.dir}/${javaws.ftp.dir}</echo>
				<ftp server="${ftp.server}" userid="${ftp.user}" password="${ftp.password}" action="put" remotedir="${madkit.ftp.dir}/${javaws.ftp.dir}">
					<fileset file="${jnlp.jar.gz}" />
					<fileset file="${demo.dir}/MaDKit-5-Desktop.jnlp" />
				</ftp>

			</target>

			<target name="update_website" depends="check_urls" description="update MDK website new release">
				<echo file="${build.dir}/LAST">${madkit.version}</echo>
				<loadproperties srcFile="${server.info.dir}/MDK.net" />
				<echo>FTP : updating online LAST version</echo>
				<ftp server="${ftp.server}" userid="${ftp.user}" password="${ftp.password}" action="put" remotedir="${madkit.ftp.dir}">
					<fileset dir="${build.dir}" includes="LAST" />
				</ftp>
			</target>

			<target name="check_urls" description="check main and release urls availability">
				<get dest="${java.io.tmpdir}">
					<url url="${madkit.web}/tutorials/index.html" />
					<url url="${madkit.web}/forum/index.php" />
					<url url="${madkit.repository.url}docs/api/index.html" />
				</get>
			</target>

			<!-- ================================= 
          target:      ftp-push-test        
         ================================= -->
			<target name="ftp-push-test" depends="test">
				<loadproperties srcFile="${server.info.dir}/MDK.net" />
				<ftp server="${ftp.server}" userid="${ftp.user}" password="${ftp.password}" action="mkdir" remotedir="${test.ftp.dir}" verbose="yes" />
				<ftp server="${ftp.server}" userid="${ftp.user}" password="${ftp.password}" action="put" remotedir="${test.ftp.dir}">
					<fileset dir="${test.reports.dir}" />
				</ftp>
				<ftp server="${ftp.server}" userid="${ftp.user}" password="${ftp.password}" action="put" remotedir="${test.ftp.dir}">
					<fileset dir="${test.reports.dir}" />
				</ftp>
			</target>

		</project>
